#!/usr/bin/env python3
"""
Script para verificar status das configura√ß√µes de seguran√ßa
"""

from config import Config
import os

def check_security_status():
    """Verifica status das configura√ß√µes de seguran√ßa"""
    print("üîí Verificando configura√ß√µes de seguran√ßa...")
    print()
    
    # Configura√ß√µes principais
    print("üìã Configura√ß√µes de Seguran√ßa:")
    print(f"  ‚úÖ Processamento seguro: {Config.SECURE_PROCESSING}")
    print(f"  üîê Criptografia de arquivos: {Config.ENCRYPT_TEMP_FILES}")
    print(f"  üßπ Limpeza autom√°tica: {Config.AUTO_CLEANUP}")
    print(f"  üìù Logs de auditoria: {Config.AUDIT_LOGGING}")
    print()
    
    # Diret√≥rios
    print("üìÅ Status dos Diret√≥rios:")
    print(f"  üìÇ Diret√≥rio tempor√°rio: {Config.TEMP_DIRECTORY}")
    print(f"    - Existe: {os.path.exists(Config.TEMP_DIRECTORY)}")
    if os.path.exists(Config.TEMP_DIRECTORY):
        files = len([f for f in os.listdir(Config.TEMP_DIRECTORY) if os.path.isfile(os.path.join(Config.TEMP_DIRECTORY, f))])
        print(f"    - Arquivos: {files}")
    
    print(f"  üìÇ Diret√≥rio uploads: {Config.UPLOAD_FOLDER}")
    print(f"    - Existe: {os.path.exists(Config.UPLOAD_FOLDER)}")
    if os.path.exists(Config.UPLOAD_FOLDER):
        files = len([f for f in os.listdir(Config.UPLOAD_FOLDER) if os.path.isfile(os.path.join(Config.UPLOAD_FOLDER, f))])
        print(f"    - Arquivos: {files}")
    
    print(f"  üìÇ Diret√≥rio processed: {Config.PROCESSED_FOLDER}")
    print(f"    - Existe: {os.path.exists(Config.PROCESSED_FOLDER)}")
    if os.path.exists(Config.PROCESSED_FOLDER):
        files = len([f for f in os.listdir(Config.PROCESSED_FOLDER) if os.path.isfile(os.path.join(Config.PROCESSED_FOLDER, f))])
        print(f"    - Arquivos: {files}")
    print()
    
    # Logs
    print("üìù Status dos Logs:")
    print(f"  üìÑ Arquivo de auditoria: {Config.AUDIT_LOG_FILE}")
    print(f"    - Existe: {os.path.exists(Config.AUDIT_LOG_FILE)}")
    if os.path.exists(Config.AUDIT_LOG_FILE):
        size = os.path.getsize(Config.AUDIT_LOG_FILE)
        print(f"    - Tamanho: {size} bytes")
    print()
    
    # Recomenda√ß√µes
    print("üí° Recomenda√ß√µes:")
    if Config.SECURE_PROCESSING:
        print("  ‚úÖ Processamento seguro est√° ativado")
    else:
        print("  ‚ö†Ô∏è ATEN√á√ÉO: Processamento seguro est√° desativado!")
    
    if Config.ENCRYPT_TEMP_FILES:
        print("  ‚úÖ Criptografia de arquivos est√° ativada")
    else:
        print("  ‚ö†Ô∏è ATEN√á√ÉO: Criptografia de arquivos est√° desativada!")
    
    if Config.AUTO_CLEANUP:
        print("  ‚úÖ Limpeza autom√°tica est√° ativada")
    else:
        print("  ‚ö†Ô∏è ATEN√á√ÉO: Limpeza autom√°tica est√° desativada!")
    
    # Verificar se h√° arquivos nas pastas antigas
    upload_files = 0
    processed_files = 0
    
    if os.path.exists(Config.UPLOAD_FOLDER):
        upload_files = len([f for f in os.listdir(Config.UPLOAD_FOLDER) if os.path.isfile(os.path.join(Config.UPLOAD_FOLDER, f))])
    
    if os.path.exists(Config.PROCESSED_FOLDER):
        processed_files = len([f for f in os.listdir(Config.PROCESSED_FOLDER) if os.path.isfile(os.path.join(Config.PROCESSED_FOLDER, f))])
    
    if upload_files > 0 or processed_files > 0:
        print(f"  ‚ö†Ô∏è ATEN√á√ÉO: Encontrados {upload_files} arquivos em uploads e {processed_files} em processed")
        print("     Execute: python cleanup_existing_files.py")
    
    print()
    print("üéâ Verifica√ß√£o conclu√≠da!")

if __name__ == "__main__":
    check_security_status() 